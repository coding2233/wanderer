name: CI

on: [push]

jobs:
  build-server-exec:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: |
        export SRC=./
        export BUILD=build
        cmake --no-warn-unused-cli -DBUILD_EXEC=ON -DBUILD_SDK=OFF -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${SRC}/cmake/linux_clang.cmake -S ${SRC} -B ${SRC}/${BUILD} && cmake --build ${SRC}/${BUILD} -j 10
        ls -alh ${BUILD}
    - name: Expose as artifact
      uses: actions/upload-artifact@v1
      with:
        name: wanderer
        path: build/wanderer

  build-sdk-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: |
        export SRC=./
        export BUILD=build
        cmake --no-warn-unused-cli -DBUILD_EXEC=OFF -DBUILD_SDK=ON -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${SRC}/cmake/linux_clang.cmake -S ${SRC} -B ${SRC}/${BUILD} && cmake --build ${SRC}/${BUILD} -j 10
        ls -alh ${BUILD}/src
    - name: Expose as artifact
      uses: actions/upload-artifact@v1
      with:
        name: libwanderer-sdk-linux.so
        path: build/src/libwanderer-sdk.so
    - name: Copy sdk file
      run: |
        mkdir build/sdk
        cp build/src/libwanderer-sdk.so build/sdk
    - uses: seanmiddleditch/gha-publish-to-git@master
      with:
        repository: coding2233/wanderer-sdk
        branch: main
        github_token: '${{ secrets.WANDERER_SDK_TOKEN  }}'
        source_folder: build/sdk
        target_folder: linux

  build-sdk-windows-x64:
    runs-on: windows-latest
    needs: build-sdk-linux
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: |
        md build
        cmake --no-warn-unused-cli -DBUILD_EXEC=OFF -DBUILD_SDK=ON -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -S ./ -B build
        dir build
        dir build\src
        cmake --build build/ --config Release --target wanderer-sdk
        dir build\src\Release
    - name: Expose as artifact
      uses: actions/upload-artifact@v1
      with:
        name: wanderer-sdk-windows-x64.dll
        path: build/src/Release/wanderer-sdk.dll
    - name: Copy sdk file
      run: |
        md build\sdk
        copy build\src\Release\wanderer-sdk.dll build\sdk\wanderer-sdk-x64.dll
    - uses: liziwl/git-push-action@master
      with:
        repository_url: 'github.com/coding2233/wanderer-sdk.git'
        git_token_holder: 'coding2233'
        git_token: '${{ secrets.WANDERER_SDK_TOKEN }}'
        commit_user: 'wanderer'
        commit_email: 'dutifulwanderer@gmail.com'
        push_dir: 'build/sdk/'
        branch: main
        keep_history: true
  
  build-sdk-windows-x86:
    runs-on: windows-latest
    needs: build-sdk-windows-x64
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: |
        md build
        cmake -A Win32 --no-warn-unused-cli -DBUILD_EXEC=OFF -DBUILD_SDK=ON -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -S ./ -B build
        dir build
        dir build\src
        cmake --build build/ --config Release --target wanderer-sdk
        dir build\src\Release
    - name: Expose as artifact
      uses: actions/upload-artifact@v1
      with:
        name: wanderer-sdk-windows-x86.dll
        path: build/src/Release/wanderer-sdk.dll
    - name: Copy sdk file
      run: |
        md build\sdk
        copy build\src\Release\wanderer-sdk.dll build\sdk\wanderer-sdk-x86.dll
    - uses: liziwl/git-push-action@master
      with:
        repository_url: 'github.com/coding2233/wanderer-sdk.git'
        git_token_holder: 'coding2233'
        git_token: '${{ secrets.WANDERER_SDK_TOKEN }}'
        commit_user: 'wanderer'
        commit_email: 'dutifulwanderer@gmail.com'
        push_dir: 'build/sdk/'
        branch: main
        keep_history: true
  
  build-sdk-android-armeabi-v7a:
    runs-on: ubuntu-latest
    needs: build-sdk-windows-x86
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
        sudo apt-get install -y unzip
        unzip android-ndk-r21e-linux-x86_64.zip
        export ANDROID_NDK=$(pwd)/android-ndk-r21e
        export SRC=./
        export BUILD=build
        cmake --no-warn-unused-cli -DBUILD_EXEC=OFF -DBUILD_SDK=ON -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI="armeabi-v7a" -DANDROID_NDK=$ANDROID_NDK -DANDROID_PLATFORM=android-22 -S ${SRC} -B ${SRC}/${BUILD} && cmake --build ${SRC}/${BUILD} -j 10
        ls -alh ${BUILD}/src
    - name: Expose as artifact
      uses: actions/upload-artifact@v1
      with:
        name: libwanderer-sdk-android-armv7.so
        path: build/src/libwanderer-sdk.so
    - name: Copy sdk file
      run: |
        mkdir build/sdk
        cp build/src/libwanderer-sdk.so build/sdk
    - uses: seanmiddleditch/gha-publish-to-git@master
      with:
        repository: coding2233/wanderer-sdk
        branch: main
        github_token: '${{ secrets.WANDERER_SDK_TOKEN  }}'
        source_folder: build/sdk
        target_folder: android/armv7

  build-sdk-android-arm64-v8a:
    runs-on: ubuntu-latest
    needs: build-sdk-android-armeabi-v7a
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
        sudo apt-get install -y unzip
        unzip android-ndk-r21e-linux-x86_64.zip
        export ANDROID_NDK=$(pwd)/android-ndk-r21e
        export SRC=./
        export BUILD=build
        cmake --no-warn-unused-cli -DBUILD_EXEC=OFF -DBUILD_SDK=ON -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI="arm64-v8a" -DANDROID_NDK=$ANDROID_NDK -DANDROID_PLATFORM=android-22 -S ${SRC} -B ${SRC}/${BUILD} && cmake --build ${SRC}/${BUILD} -j 10
        ls -alh ${BUILD}/src
    - name: Expose as artifact
      uses: actions/upload-artifact@v1
      with:
        name: libwanderer-sdk-android-armv8.so
        path: build/src/libwanderer-sdk.so
    - name: Copy sdk file
      run: |
        mkdir build/sdk
        cp build/src/libwanderer-sdk.so build/sdk
    - uses: seanmiddleditch/gha-publish-to-git@master
      with:
        repository: coding2233/wanderer-sdk
        branch: main
        github_token: '${{ secrets.WANDERER_SDK_TOKEN  }}'
        source_folder: build/sdk
        target_folder: android/armv8
  
  build-sdk-android-x86_64:
    runs-on: ubuntu-latest
    needs: build-sdk-android-arm64-v8a
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
        sudo apt-get install -y unzip
        unzip android-ndk-r21e-linux-x86_64.zip
        export ANDROID_NDK=$(pwd)/android-ndk-r21e
        export SRC=./
        export BUILD=build
        cmake --no-warn-unused-cli -DBUILD_EXEC=OFF -DBUILD_SDK=ON -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI="x86_64" -DANDROID_NDK=$ANDROID_NDK -DANDROID_PLATFORM=android-22 -S ${SRC} -B ${SRC}/${BUILD} && cmake --build ${SRC}/${BUILD} -j 10
        ls -alh ${BUILD}/src
    - name: Expose as artifact
      uses: actions/upload-artifact@v1
      with:
        name: libwanderer-sdk-android-x86_64.so
        path: build/src/libwanderer-sdk.so
    - name: Copy sdk file
      run: |
        mkdir build/sdk
        cp build/src/libwanderer-sdk.so build/sdk
    - uses: seanmiddleditch/gha-publish-to-git@master
      with:
        repository: coding2233/wanderer-sdk
        branch: main
        github_token: '${{ secrets.WANDERER_SDK_TOKEN  }}'
        source_folder: build/sdk
        target_folder: android/x86_64
  
  build-sdk-osx:
    runs-on: macos-latest
    needs: build-sdk-android-x86_64
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: |
        export SRC=./
        export BUILD=build
        cmake --no-warn-unused-cli -DBUILD_EXEC=OFF -DBUILD_SDK=ON -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -S ${SRC} -B ${SRC}/${BUILD} && cmake --build ${SRC}/${BUILD} -j 10
        ls -alh ${BUILD}/src
    - name: Expose as artifact
      uses: actions/upload-artifact@v1
      with:
        name: libwanderer-sdk-osx.dylib
        path: build/src/libwanderer-sdk.dylib
    - name: Copy sdk file
      run: |
        mkdir build/sdk
        cp build/src/libwanderer-sdk.dylib build/sdk/libwanderer-sdk-osx.dylib
    - uses: liziwl/git-push-action@master
      with:
        repository_url: 'github.com/coding2233/wanderer-sdk.git'
        git_token_holder: 'coding2233'
        git_token: '${{ secrets.WANDERER_SDK_TOKEN }}'
        commit_user: 'wanderer'
        commit_email: 'dutifulwanderer@gmail.com'
        push_dir: 'build/sdk/'
        branch: main
        keep_history: true

  build-sdk-ios-arm:
    runs-on: macos-latest
    needs: build-sdk-osx
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: |
        export SRC=./
        export BUILD=build
        cmake --no-warn-unused-cli -DBUILD_EXEC=OFF -DBUILD_SDK=ON -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${SRC}/cmake/ios.toolchain.cmake -DPLATFORM=OS -S ${SRC} -B ${SRC}/${BUILD}
        cmake --build ${SRC}/${BUILD} --config Release -j 10
        ls -alh ${BUILD}/src
    - name: Expose as artifact
      uses: actions/upload-artifact@v1
      with:
        name: libwanderer-sdk-armv7-fat.dylib
        path: build/src/libwanderer-sdk.dylib
    - name: Copy sdk file
      run: |
        mkdir build/sdk
        cp build/src/libwanderer-sdk.dylib build/sdk/libwanderer-sdk-armv7.dylib
    - uses: liziwl/git-push-action@master
      with:
        repository_url: 'github.com/coding2233/wanderer-sdk.git'
        git_token_holder: 'coding2233'
        git_token: '${{ secrets.WANDERER_SDK_TOKEN }}'
        commit_user: 'wanderer'
        commit_email: 'dutifulwanderer@gmail.com'
        push_dir: 'build/sdk/'
        branch: main
        keep_history: true

  build-sdk-ios-arm64:
    runs-on: macos-latest
    needs: build-sdk-ios-arm
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: |
        export SRC=./
        export BUILD=build
        cmake --no-warn-unused-cli -DBUILD_EXEC=OFF -DBUILD_SDK=ON -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${SRC}/cmake/ios.toolchain.cmake -DPLATFORM=OS64 -S ${SRC} -B ${SRC}/${BUILD}
        cmake --build ${SRC}/${BUILD} --config Release -j 10
        ls -alh ${BUILD}/src
    - name: Expose as artifact
      uses: actions/upload-artifact@v1
      with:
        name: libwanderer-sdk-armv64.dylib
        path: build/src/libwanderer-sdk.dylib
    - name: Copy sdk file
      run: |
        mkdir build/sdk
        cp build/src/libwanderer-sdk.dylib build/sdk/libwanderer-sdk-arm64.dylib
    - uses: liziwl/git-push-action@master
      with:
        repository_url: 'github.com/coding2233/wanderer-sdk.git'
        git_token_holder: 'coding2233'
        git_token: '${{ secrets.WANDERER_SDK_TOKEN }}'
        commit_user: 'wanderer'
        commit_email: 'dutifulwanderer@gmail.com'
        push_dir: 'build/sdk/'
        branch: main
        keep_history: true
  
  # build-sdk-ios-armv7:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: build
  #     run: |
  #       export SRC=./
  #       export BUILD=build
  #       cmake --no-warn-unused-cli -DBUILD_EXEC=OFF -DBUILD_SDK=ON -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${SRC}/cmake/ios.toolchain.cmake -DPLATFORM=OS -DARCHS=armv7 -S ${SRC} -B ${SRC}/${BUILD}
  #       cmake --build ${SRC}/${BUILD} --config Release -j 10
  #       ls -alh ${BUILD}/src
  
  # build-sdk-ios-armv7s:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: build
  #     run: |
  #       export SRC=./
  #       export BUILD=build
  #       cmake --no-warn-unused-cli -DBUILD_EXEC=OFF -DBUILD_SDK=ON -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${SRC}/cmake/ios.toolchain.cmake -DPLATFORM=OS -DARCHS=armv7s -S ${SRC} -B ${SRC}/${BUILD}
  #       cmake --build ${SRC}/${BUILD} --config Release -j 10
  #       ls -alh ${BUILD}/src
  
  # build-sdk-ios-x86_64:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: build
  #     run: |
  #       export SRC=./
  #       export BUILD=build
  #       cmake --no-warn-unused-cli -DBUILD_EXEC=OFF -DBUILD_SDK=ON -DWEBSERVER=OFF -DLUASCRIPT=OFF -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${SRC}/cmake/ios.toolchain.cmake -DPLATFORM=OS -DARCHS=x86_64 -S ${SRC} -B ${SRC}/${BUILD}
  #       cmake --build ${SRC}/${BUILD} --config Release -j 10
  #       ls -alh ${BUILD}/src